@page "/Admin/Products/Edit/{id:long}"
@page "/Admin/products/Create"
@inherits OwningComponentBase<IBookRepository>

<style>
	div.validation-message {
		color: rgb(220, 53, 69);
		font-weight: 500
	}
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">
	@TitleText a Product
</h3>
<h1>Test</h1>
<EditForm Model="Product" OnValidSubmit="SaveBook">
	<DataAnnotationsValidator />
	@if (Product.Id != 0)
	{
		<div class="form-group">
			<label>ID</label>
			<input class=" form-control" disabled value="@Product.Id" />
		</div>
	}
	
	<div class="form-group">
		<label>Title</label>
		<ValidationMessage For="@(() => Product.Title)" />
		<InputText class="form-control" @bind-Value="Product.Title" />
	</div>
	
	<div class="form-group">
		<label>Category</label>
		<ValidationMessage For="@(() => Product.Category)" />
		<InputText class="form-control" @bind-Value="Product.Category" />
	</div>
	
	<div class="form-group">
		<label>Price</label>
		<ValidationMessage For="@(() => Product.Price)" />
		<InputNumber class="form-control" @bind-Value="Product.Price" />
	</div>
	
	<div class="form-group">
		<label>Author</label>
		<ValidationMessage For="@(() => Product.Author)" />
		<InputText class="form-control" @bind-Value="Product.Author" />
	</div>
	
	<div class="form-group">
		<label>Publisher</label> 
		<ValidationMessage For="@(() => Product.Publisher)" />
		<InputText class="form-control" @bind-Value="Product.Publisher" />
	</div>

	<div class="mt-2">
		<button type="submit" class="btn btn-@ThemeColor">Save</button>
		<NavLink class="btn btn-secondary" href="/admin/products">Cancel</NavLink>
	</div>

</EditForm>


@code {
	public IBookRepository Repository => Service;

	[Inject]
	public NavigationManager? NavManager { get; set; }

	[Parameter]
	public long id { get; set; } = 0;

	public Book Product { get; set; } = new Book();

	protected override void OnParametersSet()
	{
		if (id != 0)
		{
			Product = Repository.Books.FirstOrDefault(p => p.Id == id) ?? new();
		}
	}

	public void SaveBook()
	{
		if (id == 0)
		{
			Repository.CreateItem(Product);
		}
		else
		{
			Repository.SaveItem(Product);
		}
		NavManager?.NavigateTo("/Admin/Products");
	}
	public string ThemeColor => id == 0 ? "primary" : "warning";
	public string TitleText => id == 0 ? "Create" : "Edit";
}